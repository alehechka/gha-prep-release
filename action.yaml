name: 'Prepare Automated Release'
description: 'Prepares a release by back merging main into develop and creating an automated release branch if marked for semver release.'

inputs:
  GITHUB_TOKEN:
    description: 'GitHub Action Token or PAT'
    required: true

  skip_create_branch:
    required: false
    description: Flag to skip prep auto branch creation.
    default: 'false'

  skip_back_merge:
    description: 'Flag to skip back merge step.'
    required: false
    default: 'false'

  back_merge_branch:
    description: 'Branch to back merge into.'
    required: false
    default: ${{ github.event.repository.default_branch }}

  semver_tag:
    description: 'Semver Override Tag'
    required: false

  patch_pattern:
    description: 'Patch keyword to search for in determining semver increment'
    required: false
    default: '[PATCH]'

  minor_pattern:
    description: 'Minor keyword to search for in determining semver increment'
    required: false
    default: '[MINOR]'

  major_pattern:
    description: 'Major keyword to search for in determining semver increment'
    required: false
    default: '[MAJOR]'

  skip_auto_increment:
    description: 'Flag to skip the auto patch semver increment. Setting this to true will force the patch_pattern to match the commit message to increment at that level.'
    required: false
    default: 'false'

  initial_version:
    description: The initial version.
    required: false
    default: 'v0.0.0'

  release_prefix:
    description: 'Prefix for automation release branch'
    required: false
    default: 'release'

  back_commit_message:
    description: 'The commit message to use for the merge'
    required: false

  author_name:
    description: 'The author name to use for the merge'
    required: false
    default: 'github-actions'

  author_email:
    description: 'The email to use for the merge'
    required: false
    default: 'github-actions@github.com'

outputs:
  branch:
    description: 'Name of branch created.'
    value: ${{ steps.branch.outputs.name }}
  created:
    description: 'Boolean value representing whether or not a new branch was created.'
    value: ${{ steps.created_branch.outputs.created }}
  tag:
    description: 'The tag value used to create prep release branch.'
    value: ${{ steps.semver.outputs.tag }}
  level:
    description: 'The semver increment level found from commit message.'
    value: ${{ steps.semver-increment.outputs.level }}

runs:
  using: composite
  steps:
    - name: Back Merge
      if: inputs.skip_back_merge != 'true'
      uses: dmsi-io/gha-back-merge@main
      with:
        token: ${{ inputs.GITHUB_TOKEN }}
        src-branch: ${{ github.ref_name }}
        commit-message: ${{ inputs.back_commit_message }}
        commit-author-name: ${{ inputs.author_name }}
        commit-author-email: ${{ inputs.author_email }}

    - name: Checkout if skipped merge
      if: inputs.skip_back_merge == 'true'
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.GITHUB_TOKEN }}

    - name: Find Semver keyword
      if: inputs.semver_tag == ''
      id: semver-increment
      run: |
        case "${{ github.event.head_commit.message }}" in

          *"${{ inputs.major_pattern }}"*)
            echo "::set-output name=level::major"
            ;;

          *"${{ inputs.minor_pattern }}"*)
            echo "::set-output name=level::minor"
            ;;

          *"${{ inputs.patch_pattern }}"*)
            echo "::set-output name=level::patch"
            ;;

          *)
            if [[ "${{ inputs.skip_auto_increment }}" != "true" ]]; then 
              echo "::set-output name=level::patch"
            fi
            ;;
        esac
      shell: bash

    - name: Find Latest Tag
      if: inputs.semver_tag == '' && steps.semver-increment.outputs.level != ''
      id: latest-tag
      uses: dmsi-io/gha-get-latest-tag@main
      with:
        semver_only: true
        with_initial_version: true
        initial_version: ${{ inputs.initial_version }}

    - name: Increment Latest Tag
      # Commit equivalent to https://github.com/actions-ecosystem/action-bump-semver/releases/tag/v1
      uses: actions-ecosystem/action-bump-semver@34e334551143a5301f38c830e44a22273c6ff5c5
      if: inputs.semver_tag == '' && steps.latest-tag.outputs.tag != ''
      id: bump-semver
      with:
        current_version: ${{ steps.latest-tag.outputs.tag }}
        level: ${{ steps.semver-increment.outputs.level }}

    - name: Select Semver Tag
      id: semver
      run: |
        if [ -n "${{ inputs.semver_tag }}" ]; then
          echo "::set-output name=tag::${{ inputs.semver_tag }}"

        else
          echo "::set-output name=tag::${{ steps.bump-semver.outputs.new_version }}"

        fi
      shell: bash

    - name: Create Branch name
      id: branch
      run: |
        BRANCH="${{ inputs.release_prefix }}/${{ steps.semver.outputs.tag }}"

        echo "::set-output name=name::$BRANCH"
      shell: bash

    - name: Create Prep Release branch
      if: inputs.skip_create_branch != 'true' && steps.semver.outputs.tag != ''
      id: created_branch
      uses: dmsi-io/gha-create-branch@v3.0.0
      with:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        branch: ${{ steps.branch.outputs.name }}
